3-2
install.packages("dslabs")
library(dslabs)
library (dislabs)
library (dslabs)
library(dslabs)
install.packages("tidyverse")
installed.packages()
source('~/Documents/R course edx/edx1.R')
murders %>%
ggplot(aes(population, total, label=abb, color=region)) +
geom_label()
source('~/Documents/R course edx/edx1.R')
source('~/Documents/R course edx/edx1.R')
a->1
a<-1
b<2
b<-2
b<-1
c<--1
a
b
c
ls()
?log
?"+"
data()
CO2
A<-x
(-b + sqrt(b^2 - 4*a*c))/(2*a)
(-b + sqrt(b^2 - 4*a*c))/(2*a)
a<-2
b<--1
c<--4
(-b + sqrt(b^2 - 4*a*c))/(2*a)
(-b - sqrt(b^2 - 4*a*c))/(2*a)
help("log")
log(1024,4)
install.packages("dslabs")
library(dslabs)
data(movielens)
View(murders)
> View(murders)
View(movielens)
women
as.factor(Titanic
as.data.frame.character(Titanic)
as.data.frame.character(Titanic)
as.factor(Titanic)
view(Titanic)
data("Titanic")
as.factor(Titanic)
as.data.frame(Titanic)
view(titanic)
data("Titanic")
library(titanic)
view("titanic")
View(Titanic)
str(movielens)
nlevels(genres)
nlevels(movielens$genres)
data()
Viev(co2)
View(co2)
library(dslabs)
View(murders)
class(murders)
str(murders)
murders$total
levels(murders$state)
levels(murders$population)
levels(murders$region)
seq(1,25,2)
seq(1,25,2)<-a
a<-seq(1,24,2)
total(a)
a(total)
?total
min(a)
mean(a)
tot?
sum?
?sum
x<-seq(1,150,0.2)
sum(x)
aglar<-c(saban:55,afra:60)
kilo<-c("saban":55, "afra:60")
> kilo<-c("saban":55, "afra":60)
kilo<-c(55,60)
name(kilo)<-"saban","afra"
kilo(1:"saban, 2:"afra")
1
kilo[1]
names(kilo)
names<-c(saban,afra)
names<-c("saban","afra")
ailekilo<-data.frame(isim=names, kg=kilo)
isim
ailekilo$isim
mean(aile$kilo)
mean(ailekilo$kg)
sehir<-c("usak","bayburt")
nufus<-(
100,
50)
nufus<-c(100,50)
tablo<-data.frame(sehir,nufus)
sehir[2]
sehir
mean(nufus)
?mean
sehir<-c("usak","bayburt","istanbul")
nufus<-c("100","200",ad)
nufus
> nufus<-c("100","200","ad")
nufus<-c("100","200","ad")
nufus
mean(nufus)
mean(nufus,na.rm=FALSE)
mean(nufus,,na.rm=FALSE)
mean(nufus) na.rm=FALSE
mean(nufus[na.rm=FALSE])
mean(nufus(na.rm=FALSE))
mean(nufus)
as.numeric(nufus)
mean(nufus,,na.rm=FALSE)
mean(nufus,na.rm=FALSE)
mean(nufus,na.rm=TRUE)
mean(nufus)
mean(nufus, na.rm=TRUE)
murders$state
murders$state[which.max(pupulation)]
population<-population$murder
View(murders)
population<-population$murder
population<-population$murders
population
populatipn<-murders$population
which.max(population)
population<-murders$population
which.max(population)
order(population)
rank(population)
population
population[order(decreasing=FALSE)]
as.numeric(population)
population[order(decreasing=FALSE)]
murders$state[which.max(murders$population)]
state<-murders$state
oder(state)
order(state)
state[which.max(population)]
population[which.min(population)]
?sort
?which.min
x <- c(31, 4, 15, 92, 65)
sort(x)
sort(x,decreasing=FALSE)
sort(x,decreasing=TRUE)
which.max(murders$total)
max(murders$total)
index?
?index
?match
ind <- match(c("New York", "Florida", "Texas"), murders$state)
ind
murder_rate[ind]
murders$region[ind]
which(murders$state%in%c("New York", "Florida", "Texas", "istanbul"))
which(c("New York", "Florida", "Texas", "istanbul")%in%murders$state)
c("New York", "Florida", "Texas", "istanbul")%in%murders$state
murders$state%in%c("New York", "Florida", "Texas", "istanbul")
> murders$state%in%c("New York", "Florida","istanbul", "Texas")
murders$state%in%c("New York", "Florida","istanbul", "Texas")
which(murders$state%in%c("New York","istanbul", "Florida", "Texas"))
library(dslabs)
data(heights)
options(digits = 3)
mean(hights)
mean(heights)
heights
mean(heights$height)
ind<-mean(heights$height)
heights$height[height>ind]
heights$height[heights$height>ind]
heights$height[heights$height>=ind]
heights$height[heights$height==ind]
heights$height>=ind
sum(heights$height>=ind)
sum(heights$height>=ind&heights$sex=="female")
sum(heights$height>=ind&heights$sex=="Female")
mean(heights$sex=="Female")
sum(heights$sex=="Female")
238/1050
min(heights$height)
match(min(heights$height),heights$height)
which(min(heights$height),heights$height)
which(min(heights$height))
which.min(heights$height)
sum(heights$height==50)
heights$height==50
heights$height[heights$height==50]
which(heights$height%in%(heights$height==50)
which(heights$height%in%(heights$height==50))
which(heights$height%in%c(heights$height==50)
which(heights$height%in%c(heights$height==50))
which(heights$height%in%c(50))
height$sex[1032]
heights$sex[1032]
max(height)
max(heights$height)
x<-50:82
match(x%in%heights$height)
sum(!x%in%heights$height)
!x
library(readxl)
denemeR <- read_excel("Desktop/denemeR.xlsx")
View(denemeR)
isim<-names
isim<-denemeR$isim
link<-denemeR$link
ulke<-denemeR$ulke
ulke
data.frame(denemeR)
?count.fields
order(isim)
order(ulke)
order(ulke, decreasig=TRUE)
order(ulke, decreasing = TRUE)
?order
sort(ulke)
?sort
sort(row, decreasing = TRUE)
sort(ulke, decreasing = TRUE)
mean(heights$height)
library(dslabs)
data(murders)
murder_rate <- murders$total / murders$population*100000
ind<-which.min(murder_rate)
if(murder_rate[ind])
ind <- which.min(murder_rate)
if(murder_rate[ind] < 0.5){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 0.9){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] > 0.9){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 3){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 30){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 300 ){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 0.1 ){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] >  0.1 ){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] >  0.1 ){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
if(ulke="YD"){print(isim)}
if(denemeR$ulke="YD"){print(isim)}
if(denemeR$ulke="YD"){print(isim)}
a <- 0
if(a!=0){
print(1/a)
} else{
print("No reciprocal for 0.")
}
a <- 0
if(a!=2){
print(1/a)
} else{
print("No reciprocal for 0.")
}
a <- 1
if(a!=0){
print(1/a)
} else{
print("No reciprocal for 0.")
}
a <- 0
if(a!=3){
print(6/a)
} else{
print("No reciprocal for 0.")
}
?a!
if(murders$total] < 100){
print(murders$state[ind])
} else{
print("No state has murder rate that low")
}
if(murders$total] < 100){
print(murders$state[which.min(murder_rate])
} else{
print("No state has murder rate that low")
}
ind <- which.min(murder_rate)
if(murder_rate[ind] < 0.5){
print(murders$abb[ind])
} else{
print("No state has murder rate that low")
}
b<-sum(murders$total)
ifelse(b>100, a/1000, a*2)
ifelse(b>100, a/1000, a*2)
b
ifelse(b>100, b/1000, b*2)
ifelse()
ulke
ifelse(ulke="TR", 1,2)
a <- c(0, 1, 2, -4, 5)
result <- ifelse(a > 0, 1/a, NA)
results<-ifelse(murders$total<100, az, cok)
results<-ifelse(murders$total<100, "az", "cok")
results
if(murder_rate[ind] < 0.25), murders$state[ind],"No state has a murder rate that low.")
if(murder_rate[ind] < 0.25), murders$state[ind],"No state has a murder rate that low.")
ind <- which.min(murder_rate)
if(murder_rate[ind] < 0.25), murders$state[ind],"No state has a murder rate that low.")
if(murder_rate[ind] < 0.25, murders$state[ind],"No state has a murder rate that low.")
ifelse(murder_rate[ind] < 0.25, murders$state[ind],"No state has a murder rate that low.")
ifelse(total<-100, total*2,toal/2)
ifelse(total<-100, total*2,total/2)
ifelse(total<100, total*2,total/2)
total
total<-murders$total
ifelse(total<100, NA, total*2)
?function
topla<-function(x){a b a+b}
topla<-function(x){x x x+x}
?prod
search()
?:
x<-1:10
x
sqrt(x)
x <- c(1,2,-3,4)
if(all(x>0)){
print("All Postives")
} else{
print("Not all positives")
}
ifelse(murders$abb="CA", evt, hyr)
ifelse(murders$abb=="CA", evt, hyr)
=
avg <- function(x){
install.packages("tidyverse")
read.csv(users/saban/Desktop/offers.csv)
read.csv("users/saban/Desktop/offers.csv")
read.csv("users/saban/downloads/offers.csv")
read.csv("Users/saban/downloads/offers.csv")
read.csv("Users/saban/Downloads/offers.csv")
read.csv("Users/saban/downloads/offers.csv")
read.csv("/Users/saban/Downloads/offers.csv")
filename->"/Users/saban/Downloads/offers.csv"
"/Users/saban/Downloads/offers.csv"<-myfile
myfile<-"/Users/saban/Downloads/offers.csv"
read.csv(myfiles)
read.csv("myfiles")
read.csv("myfile")
read.csv(myfile)
?read.csv
install.packages("ape")
install.packages("tcltk2")
install.packages("stylo")
install.packages()
swd "/Users/saban/Desktop/R_exercises/Session1/Saban"
swd("/Users/saban/Desktop/R_exercises/Session1/Saban")
swd("/Users/saban/Desktop/R_exercises/Session1/Saban")
setwd("/Users/saban/Desktop/R_exercises/Session1/Saban")
x <- 10
x
x-3
path <- "/Users/saban/Desktop/R_exercises/Session1/0310Tabari.Tarikh.Shamela0009783BK1-ara1.completed/"
path <- "/Users/saban/Desktop/R_exercises/Session1/0310Tabari.Tarikh.Shamela0009783BK1-ara1.completed/"
path
path <- "/Users/saban/Desktop/R_exercises/Session1/0310Tabari.Tarikh.Shamela0009783BK1-ara1.completed"
tarikh <- scan(file=path, what="character", sep="\n")
path <- "Users/saban/Desktop/R_exercises/Session1/0310Tabari.Tarikh.Shamela0009783BK1-ara1.completed/"
tarikh
